{"version":3,"sources":["components/Product.js","components/ProductsList.js","components/ComparedProduct.js","components/Compare.js","components/App.js","serviceWorker.js","index.js"],"names":["Product","props","product","id","name","img","description","price","toCompare","filter","thumbClass","length","removeBtn","onClick","remove","className","addBtn","add","src","alt","ProductsList","products","data","map","key","ComparedProduct","colors","fresh","color","index","style","backgroundColor","freshClass","Compare","productsToCompare","App","state","handleAddToCompare","setState","handleRemoveFromCompare","removedProduct","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRAoCeA,G,MAhCC,SAACC,GAAW,IAAD,EAIuBA,EAAMC,QAA5CC,EAJe,EAIfA,GAAIC,EAJW,EAIXA,KAAMC,EAJK,EAILA,IAAKC,EAJA,EAIAA,YAAaC,EAJb,EAIaA,MAC9BC,EAAYP,EAAMO,UAAUC,QAAO,SAAAP,GAAO,OAAIA,EAAQC,KAAOA,KAE7DO,EAAkC,IAArBF,EAAUG,OAAe,gDAAkD,iBACxFC,EAAY,4BAAQC,QAAS,kBAAMZ,EAAMa,OAAOX,IAAKY,UAAU,qDAAnD,aACZC,EAAS,4BAAQH,QAAS,kBAAMZ,EAAMgB,IAAIhB,EAAMC,UAAUa,UAAU,wBAA3D,cAEf,OACI,oCACI,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,WACX,yBAAKA,UAAWL,GACZ,yBAAKQ,IAAKb,EAAKc,IAAKf,EAAMW,UAAU,gBACd,IAArBP,EAAUG,OAAeC,EAAYI,GAE1C,yBAAKD,UAAU,iBACX,wBAAIA,UAAU,kBAAkBX,GAChC,uBAAGW,UAAU,8BAA8BT,GAC3C,0BAAMS,UAAU,kBACXR,EADL,kBCRTa,EAbM,SAACnB,GAElB,IAAMoB,EAAWpB,EAAMqB,KAAKC,KAAI,SAACrB,GAAD,OAAc,kBAAC,EAAD,CAASsB,IAAKtB,EAAQC,GAAID,QAASA,EAASM,UAAWP,EAAMO,UAAWS,IAAKhB,EAAMgB,IAAKH,OAAQb,EAAMa,YAEpJ,OACI,oCACI,yBAAKC,UAAU,0BACVM,KCcFI,EAxBS,SAACxB,GAAW,IAAD,EAEWA,EAAMC,QAA1CE,EAFyB,EAEzBA,KAAMC,EAFmB,EAEnBA,IAAKE,EAFc,EAEdA,MAAOmB,EAFO,EAEPA,OAAQC,EAFD,EAECA,MAChCD,EAASA,EAAOH,KAAI,SAACK,EAAOC,GAAR,OAAkB,yBAAKL,IAAKK,EAAOd,UAAU,wBAAwBe,MAAO,CAAEC,gBAAiBH,QAEnH,IAAMI,EAAaL,EAAQ,0EAA4E,2EAIvG,OAHAA,EAAQA,EAAQ,eAAY,eAIxB,oCACI,wBAAIZ,UAAU,gBACV,wBAAIA,UAAU,uCACV,yBAAKG,IAAKb,EAAKc,IAAI,GAAGJ,UAAU,iBAChC,0BAAMA,UAAU,iBAAiBX,IAErC,wBAAIW,UAAU,wCAAwCR,EAAtD,YACA,wBAAIQ,UAAU,wCAAwCW,GACtD,wBAAIX,UAAWiB,GAAaL,MCE7BM,EAnBC,SAAChC,GAEb,IAAMiC,EAAoBjC,EAAMO,UAAUe,KAAI,SAACrB,GAAD,OAAc,kBAAC,EAAD,CAAiBsB,IAAKtB,EAAQC,GAAID,QAASA,OAEvG,OACI,oCACI,yBAAKa,UAAU,WACX,wBAAIA,UAAU,gBACV,wBAAIA,UAAU,uCAAd,WACA,wBAAIA,UAAU,uCAAd,QACA,wBAAIA,UAAU,uCAAd,UACA,wBAAIA,UAAU,uCAAd,SAEHmB,KCkHFC,E,2MAzHbb,KAAO,CACL,CACEnB,GAAI,EACJC,KAAM,SACNC,IAAK,mBACLC,YAAa,kBACbC,MAAO,OACPmB,OAAQ,CAAC,SAAU,SACnBC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,OACNC,IAAK,mBACLC,YAAa,mBACbC,MAAO,OACPmB,OAAQ,CAAC,SAAU,QAAS,OAC5BC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,SACNC,IAAK,mBACLC,YAAa,eACbC,MAAO,OACPmB,OAAQ,CAAC,MAAO,QAChBC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,SACNC,IAAK,mBACLC,YAAa,mBACbC,MAAO,OACPmB,OAAQ,CAAC,SAAU,QAAS,OAC5BC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,sBACNC,IAAK,mBACLC,YAAa,+BACbC,MAAO,OACPmB,OAAQ,CAAC,MAAO,SAChBC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,QACNC,IAAK,mBACLC,YAAa,qBACbC,MAAO,OACPmB,OAAQ,CAAC,MAAO,SAAU,UAC1BC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,UACNC,IAAK,mBACLC,YAAa,gBACbC,MAAO,OACPmB,OAAQ,CAAC,QAAS,QAClBC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,SACNC,IAAK,mBACLC,YAAa,mBACbC,MAAO,OACPmB,OAAQ,CAAC,QAAS,UAClBC,OAAO,GAET,CACExB,GAAI,EACJC,KAAM,YACNC,IAAK,mBACLC,YAAa,wBACbC,MAAO,OACPmB,OAAQ,CAAC,QAAS,QAClBC,OAAO,I,EAIXS,MAAQ,CACN5B,UAAW,I,EAGb6B,mBAAqB,SAACnC,GACpB,GAAoC,IAAhC,EAAKkC,MAAM5B,UAAUG,OACvB,OAAO,KAEP,IAAMH,EAAS,sBAAO,EAAK4B,MAAM5B,WAAlB,CAA6BN,IAC5C,EAAKoC,SAAS,CACZ9B,e,EAKN+B,wBAA0B,SAACpC,GACzB,IACMqC,EADS,YAAO,EAAKJ,MAAM5B,WACAC,QAAO,SAAAP,GAAO,OAAIA,EAAQC,KAAOA,KAClE,EAAKmC,SAAS,CACZ9B,UAAWgC,K,wEAKb,OAEE,yBAAKzB,UAAU,oCACb,sDACA,kBAAC,EAAD,CAAcD,OAAQ2B,KAAKF,wBAAyBtB,IAAKwB,KAAKJ,mBAAoBf,KAAMmB,KAAKnB,KAAMd,UAAWiC,KAAKL,MAAM5B,YACxHiC,KAAKL,MAAM5B,UAAUG,QAAU,EAAI,kBAAC,EAAD,CAASH,UAAWiC,KAAKL,MAAM5B,YAAgB,U,GAnHzEkC,IAAMC,WCKJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.083018ef.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Product = (props) => {\r\n\r\n\r\n\r\n    const { id, name, img, description, price } = props.product\r\n    const toCompare = props.toCompare.filter(product => product.id === id)\r\n\r\n    const thumbClass = toCompare.length !== 0 ? \"product__thumb product__thumb--compare-remove\" : \"product__thumb\"\r\n    const removeBtn = <button onClick={() => props.remove(id)} className=\"product__compare-btn product__compare-btn--remove\">Usuń</button>;\r\n    const addBtn = <button onClick={() => props.add(props.product)} className=\"product__compare-btn\">Prównaj</button>;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-sm-6 col-lg-4 col-xl-3\">\r\n                <div className=\"product\">\r\n                    <div className={thumbClass}>\r\n                        <img src={img} alt={name} className=\"produc__img\" />\r\n                        {toCompare.length !== 0 ? removeBtn : addBtn}\r\n                    </div>\r\n                    <div className=\"product__text\">\r\n                        <h3 className=\"product__title\">{name}</h3>\r\n                        <p className=\"product__short-description\">{description}</p>\r\n                        <span className=\"product__price\">\r\n                            {price} zł\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport Product from \"./Product\";\r\n\r\n\r\n\r\nconst ProductsList = (props) => {\r\n\r\n    const products = props.data.map((product) => (<Product key={product.id} product={product} toCompare={props.toCompare} add={props.add} remove={props.remove} />));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"products row mt-5 mb-5\">\r\n                {products}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductsList;","import React from 'react';\r\n\r\nconst ComparedProduct = (props) => {\r\n\r\n    let { name, img, price, colors, fresh } = props.product\r\n    colors = colors.map((color, index) => <div key={index} className=\"compare__single-color\" style={{ backgroundColor: color }}></div>)\r\n\r\n    const freshClass = fresh ? \"compare__param compare__param-condition compare__param-condition--fresh\" : \"compare__param compare__param-condition compare__param-condition--frozen\"\r\n    fresh = fresh ? \"Świerze\" : \"Mrożone\"\r\n\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"compare__row\">\r\n                <li className=\"compare__param compare__param--name\">\r\n                    <img src={img} alt=\"\" className=\"compare__img\" />\r\n                    <span className=\"compare__text\">{name}</span>\r\n                </li>\r\n                <li className=\"compare__param compare__param--price\">{price} zł</li>\r\n                <li className=\"compare__param compare__param--color\">{colors}</li>\r\n                <li className={freshClass}>{fresh}</li>\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ComparedProduct;","import React from 'react';\r\nimport ComparedProduct from \"./ComparedProduct\";\r\n\r\nconst Compare = (props) => {\r\n\r\n    const productsToCompare = props.toCompare.map((product) => (<ComparedProduct key={product.id} product={product} />));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"compare\">\r\n                <ul className=\"compare__row\">\r\n                    <li className=\"compare__param compare__param--head\">Produkt</li>\r\n                    <li className=\"compare__param compare__param--head\">Cena</li>\r\n                    <li className=\"compare__param compare__param--head\">Kolory</li>\r\n                    <li className=\"compare__param compare__param--head\">Stan</li>\r\n                </ul>\r\n                {productsToCompare}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Compare;\r\n","import React from 'react';\n\nimport './App.sass';\n\nimport ProductsList from \"./ProductsList\";\nimport Compare from \"./Compare\";\n\nclass App extends React.Component {\n\n  data = [\n    {\n      id: 1,\n      name: \"Maliny\",\n      img: \"/img/image01.jpg\",\n      description: \"Poprostu maliny\",\n      price: \"2.49\",\n      colors: [\"orange\", \"black\"],\n      fresh: false\n    },\n    {\n      id: 2,\n      name: \"Kiwi\",\n      img: \"/img/image02.jpg\",\n      description: \"Zwykłe kiwi\",\n      price: \"3.29\",\n      colors: [\"yellow\", \"green\", \"red\"],\n      fresh: true\n    },\n    {\n      id: 3,\n      name: \"Cebula\",\n      img: \"/img/image03.jpg\",\n      description: \"Tylko cebula\",\n      price: \"4.19\",\n      colors: [\"red\", \"blue\"],\n      fresh: false\n    },\n    {\n      id: 4,\n      name: \"Banany\",\n      img: \"/img/image04.jpg\",\n      description: \"Zwyczajne banany\",\n      price: \"5.34\",\n      colors: [\"yellow\", \"green\", \"red\"],\n      fresh: true\n    },\n    {\n      id: 5,\n      name: \"Bakłażany\",\n      img: \"/img/image05.jpg\",\n      description: \"Poprostu bakłażany\",\n      price: \"6.39\",\n      colors: [\"red\", \"black\"],\n      fresh: false\n    },\n    {\n      id: 6,\n      name: \"Kokos\",\n      img: \"/img/image06.jpg\",\n      description: \"Zwykłe kokosy\",\n      price: \"4.19\",\n      colors: [\"red\", \"yellow\", \"orange\"],\n      fresh: true\n    },\n    {\n      id: 7,\n      name: \"Papryka\",\n      img: \"/img/image07.jpg\",\n      description: \"Tylko papryka\",\n      price: \"2.24\",\n      colors: [\"green\", \"blue\"],\n      fresh: false\n    },\n    {\n      id: 8,\n      name: \"Ananas\",\n      img: \"/img/image08.jpg\",\n      description: \"Zwyczajny ananas\",\n      price: \"3.55\",\n      colors: [\"green\", \"orange\"],\n      fresh: true\n    },\n    {\n      id: 9,\n      name: \"Ziemniaki\",\n      img: \"/img/image09.jpg\",\n      description: \"Zwykłe ziemniaki\",\n      price: \"1.74\",\n      colors: [\"black\", \"blue\"],\n      fresh: false\n    },\n\n  ]\n  state = {\n    toCompare: []\n  }\n\n  handleAddToCompare = (product) => {\n    if (this.state.toCompare.length === 4) {\n      return null\n    } else {\n      const toCompare = [...this.state.toCompare, product]\n      this.setState({\n        toCompare\n      })\n    }\n  }\n\n  handleRemoveFromCompare = (id) => {\n    const toCompare = [...this.state.toCompare];\n    const removedProduct = toCompare.filter(product => product.id !== id);\n    this.setState({\n      toCompare: removedProduct\n    })\n  }\n\n  render() {\n    return (\n\n      <div className=\"product-list-page container mt-5\">\n        <h1>React comapre products</h1>\n        <ProductsList remove={this.handleRemoveFromCompare} add={this.handleAddToCompare} data={this.data} toCompare={this.state.toCompare} />\n        {this.state.toCompare.length >= 2 ? <Compare toCompare={this.state.toCompare} /> : null}\n      </div>\n\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}