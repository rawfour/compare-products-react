{"version":3,"sources":["firebase.js","context.js","components/Product.js","components/ProductsList.js","components/ComparedProduct.js","components/Compare.js","components/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","AppContext","React","createContext","AppProvider","children","useState","products","setProducts","productCollection","collection","documentsCollection","doc","id","data","useEffect","subscribe","onSnapshot","snapshot","dataFromCollection","docs","map","toCompare","setCompare","contextValue","addToCompare","product","length","removeFromCompare","removedProduct","filter","Provider","value","Product","loaded","setLoaded","name","img","description","price","onImageLoaded","Consumer","productsToCompare","item","isCompare","isLoaded","removeBtn","data-testid","onClick","className","type","addBtn","src","alt","onLoad","CircularProgress","ProductsList","ComparedProduct","colors","fresh","renderColors","color","style","backgroundColor","freshClass","renderCondition","Compare","transform","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f6292dd.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBBmE1GxqFMEn0uDEMye9-uBdwE4t31X4g',\r\n  authDomain: 'react-compare-products.firebaseapp.com',\r\n  databaseURL: 'https://react-compare-products.firebaseio.com',\r\n  projectId: 'react-compare-products',\r\n  storageBucket: 'react-compare-products.appspot.com',\r\n  messagingSenderId: '388380689401',\r\n  appId: '1:388380689401:web:d27939ab4b47381fa03328',\r\n  measurementId: 'G-E0SR2DCMZB',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firestore } from './firebase';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  const productCollection = firestore.collection('products');\r\n  const documentsCollection = (doc) => {\r\n    return { id: doc.id, ...doc.data() };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const subscribe = productCollection.onSnapshot((snapshot) => {\r\n      const dataFromCollection = snapshot.docs.map(documentsCollection);\r\n      setProducts(dataFromCollection);\r\n    });\r\n    return () => subscribe;\r\n  }, []);\r\n\r\n  const [toCompare, setCompare] = useState([]);\r\n\r\n  const handleAddToCompare = (product) => {\r\n    if (toCompare.length < 4) {\r\n      setCompare([...toCompare, product]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFromCompare = (id) => {\r\n    const removedProduct = toCompare.filter((product) => product.id !== id);\r\n    setCompare(removedProduct);\r\n  };\r\n\r\n  const contextValue = {\r\n    toCompare,\r\n    addToCompare: handleAddToCompare,\r\n    removeFromCompare: handleRemoveFromCompare,\r\n    data: products,\r\n  };\r\n\r\n  AppProvider.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n  };\r\n\r\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { AppContext } from '../context';\r\n\r\nconst Product = ({ product }) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const { id, name, img, description, price } = product;\r\n\r\n  const onImageLoaded = () => {\r\n    setLoaded(true);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ toCompare, addToCompare, removeFromCompare }) => {\r\n        const productsToCompare = toCompare.filter((item) => item.id === id);\r\n        const isCompare = productsToCompare.length !== 0 ? 'product__thumb--compare-remove' : '';\r\n        const isLoaded = !loaded ? 'product--loading' : '';\r\n        const removeBtn = (\r\n          <button\r\n            data-testid=\"remove-btn\"\r\n            onClick={() => removeFromCompare(id)}\r\n            className=\"product__compare-btn product__compare-btn--remove\"\r\n            type=\"button\"\r\n          >\r\n            Usuń\r\n          </button>\r\n        );\r\n        const addBtn = (\r\n          <button\r\n            data-testid=\"compare-btn\"\r\n            onClick={() => addToCompare(product)}\r\n            className=\"product__compare-btn\"\r\n            type=\"button\"\r\n          >\r\n            Prównaj\r\n          </button>\r\n        );\r\n\r\n        return (\r\n          <div data-testid=\"product\" className=\"col-sm-6 col-lg-4 col-xl-3\">\r\n            <div className={`product ${isLoaded}`}>\r\n              <div className={`product__thumb ${isCompare} ${isLoaded}`}>\r\n                <img src={img} alt={name} onLoad={onImageLoaded} className=\"product__img\" />\r\n                {loaded ? (\r\n                  <>{productsToCompare.length !== 0 ? removeBtn : addBtn}</>\r\n                ) : (\r\n                  <CircularProgress />\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"product__text\">\r\n                <h3 className=\"product__title\">{name}</h3>\r\n                <p className=\"product__short-description\">{description}</p>\r\n                <span className=\"product__price\">{price} zł</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nProduct.propTypes = {\r\n  product: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { AppContext } from '../context';\r\nimport Product from './Product';\r\n\r\nconst ProductsList = () => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ data }) => {\r\n        const products = data.map((product) => <Product key={product.id} product={product} />);\r\n        return (\r\n          <div data-testid=\"productsList\" className=\"products row mt-5 mb-5\">\r\n            {products}\r\n          </div>\r\n        );\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ComparedProduct = ({ product }) => {\r\n  const { name, img, price, colors, fresh } = product;\r\n  const renderColors = colors.map((color) => (\r\n    <div key={color} className=\"compare__single-color\" style={{ backgroundColor: color }} />\r\n  ));\r\n\r\n  const freshClass = fresh\r\n    ? 'compare__param compare__param-condition compare__param-condition--fresh'\r\n    : 'compare__param compare__param-condition compare__param-condition--frozen';\r\n  const renderCondition = fresh ? 'Świerze' : 'Mrożone';\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"compare__row\">\r\n        <li className=\"compare__param compare__param--name\">\r\n          <img src={img} alt=\"\" className=\"compare__img\" />\r\n          <span className=\"compare__text\">{name}</span>\r\n        </li>\r\n        <li className=\"compare__param compare__param--price\">{price} zł</li>\r\n        <li className=\"compare__param compare__param--color\">{renderColors}</li>\r\n        <li className={freshClass}>{renderCondition}</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nComparedProduct.propTypes = {\r\n  product: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default ComparedProduct;\r\n","import React from 'react';\r\nimport { AppContext } from '../context';\r\nimport ComparedProduct from './ComparedProduct';\r\n\r\nconst Compare = () => {\r\n  return (\r\n    <AppContext.Consumer>\r\n      {({ toCompare }) => {\r\n        if (toCompare.length >= 2) {\r\n          const productsToCompare = toCompare.map((product) => (\r\n            <ComparedProduct key={product.id} product={product} />\r\n          ));\r\n          return (\r\n            <div\r\n              className=\"compare\"\r\n              data-testid=\"compare\"\r\n              style={{ transform: `translate(-50%, calc(100% - ${74 * (toCompare.length + 1)}px)` }}\r\n            >\r\n              <ul className=\"compare__row\">\r\n                <li className=\"compare__param compare__param--head\">Produkt</li>\r\n                <li className=\"compare__param compare__param--head\">Cena</li>\r\n                <li className=\"compare__param compare__param--head\">Kolory</li>\r\n                <li className=\"compare__param compare__param--head\">Stan</li>\r\n              </ul>\r\n              {productsToCompare}\r\n            </div>\r\n          );\r\n        }\r\n        return null;\r\n      }}\r\n    </AppContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default Compare;\r\n","import React from 'react';\r\nimport { AppProvider } from '../context';\r\nimport './App.sass';\r\nimport ProductsList from './ProductsList';\r\nimport Compare from './Compare';\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppProvider>\r\n      <div className=\"product-list-page container mt-5\">\r\n        <h1>React comapre products</h1>\r\n        <ProductsList />\r\n        <Compare />\r\n      </div>\r\n    </AppProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}